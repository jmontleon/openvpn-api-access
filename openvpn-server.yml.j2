---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openvpn
  namespace: "{{ namespace }}"
data:
  openvpn.conf: |
   dh /certs/dh.pem
   ca /certs/ca.crt
   server 192.168.123.0 255.255.255.0
   dev tun0
   proto tcp4
   port 11194
   keepalive 10 120
   tmp-dir /tmp/openvpn
   cert /certs/server.crt
   key /certs/server.key
---
apiVersion: v1
kind: Service
metadata:
  name: openvpn
  namespace: "{{ namespace }}"
  labels:
    app: openvpn
    service: openvpn
spec:
  ports:
    - name: openvpn
      port: 11194
      targetPort: 11194
  selector:
    app: openvpn
    service: openvpn
  externalTrafficPolicy: Cluster
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: proxied-cluster
  namespace: "{{ namespace }}"
  labels:
    app: openvpn
    service: openvpn
spec:
  ports:
    - name: internal
      port: 443
      targetPort: 443
  selector:
    app: openvpn
    service: openvpn
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openvpn
  namespace: "{{ namespace }}"
  labels:
    component: openvpn
---
{% if cloud_minor.stdout|int > 7 %}
apiVersion: rbac.authorization.k8s.io/v1
{% else %}
apiVersion: rbac.authorization.k8s.io/v1beta1
{% endif %}
kind: Role
metadata:
  name: openvpn
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged
---
{% if cloud_minor.stdout|int > 7 %}
apiVersion: rbac.authorization.k8s.io/v1
{% else %}
apiVersion: rbac.authorization.k8s.io/v1beta1
{% endif %}
kind: RoleBinding
metadata:
  name: openvpn
  labels:
    component: openvpn
subjects:
  - kind: ServiceAccount
    namespace: "{{ namespace }}"
    name: openvpn
roleRef:
  kind: Role
  name: openvpn
  apiGroup: rbac.authorization.k8s.io
---
{% if cloud_minor.stdout|int > 7 %}
apiVersion: apps/v1
{% else %}
apiVersion: apps/v1beta1
{% endif %}
kind: Deployment
metadata:
  name: openvpn
  namespace: "{{ namespace }}"
  labels:
    app: openvpn
    service: openvpn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openvpn
      service: openvpn
  template:
    metadata:
      labels:
        app: openvpn
        service: openvpn
    spec:
      serviceAccountName: openvpn
      securityContext:
        runAsUser: 0
      containers:
      - image: quay.io/jmontleon/openvpn:latest
        command:
        - socat
        - TCP-LISTEN:443,fork,reuseaddr
        - TCP:192.168.123.6:443
        name: socat
      - image: quay.io/jmontleon/openvpn:latest
        command:
        - bash
        - -c 
        - 'mkdir /tmp/openvpn && openvpn --config /openvpn.conf'
        name: openvpn
        securityContext:
          privileged: true
        volumeMounts:
          - name: openvpn
            mountPath: /certs
          - name: openvpn-conf
            mountPath: /openvpn.conf
            subPath: openvpn.conf
      volumes:
      - name: openvpn
        secret:
          secretName: openvpn
          defaultMode: 0400
      - name: openvpn-conf
        configMap:
          name: openvpn
